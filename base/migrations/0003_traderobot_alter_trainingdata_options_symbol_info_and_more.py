# Generated by Django 4.2.2 on 2023-07-21 06:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("base", "0002_wsclient_channel_group"),
    ]

    operations = [
        migrations.CreateModel(
            name="TraderoBot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "strategy",
                    models.CharField(
                        default="acmadness",
                        max_length=50,
                        verbose_name="Strategy",
                    ),
                ),
                (
                    "strategy_params",
                    models.CharField(
                        default="microgain=0.3,ac_factor=6",
                        max_length=510,
                        verbose_name="Strategy parameters",
                    ),
                ),
                (
                    "is_jumpy",
                    models.BooleanField(default=False, verbose_name="Jumpy?"),
                ),
                (
                    "jumpy_blacklist",
                    models.CharField(
                        default="",
                        max_length=510,
                        verbose_name="Jumpy Symbols' Blacklist",
                    ),
                ),
                (
                    "should_reinvest",
                    models.BooleanField(
                        default=True, verbose_name="Should Reinvest?"
                    ),
                ),
                (
                    "should_stop",
                    models.BooleanField(
                        default=False,
                        verbose_name="Should Stop After Selling?",
                    ),
                ),
                (
                    "is_dummy",
                    models.BooleanField(default=True, verbose_name="Dummy?"),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Inactive"),
                            (1, "Buying"),
                            (2, "Selling"),
                        ],
                        default=0,
                        verbose_name="Bot Status",
                    ),
                ),
                (
                    "fund_base_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Base Asset)",
                    ),
                ),
                (
                    "fund_quote_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Quote Asset)",
                    ),
                ),
                (
                    "fund_quote_asset_initial",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Initial Fund (Quote Asset)",
                    ),
                ),
                (
                    "price_buying",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Buying Price the Base Asset",
                    ),
                ),
                (
                    "price_current",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Current Price of the Base Asset",
                    ),
                ),
                (
                    "price_selling",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Selling Price of the Base Asset",
                    ),
                ),
                (
                    "timestamp_start",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Timestamp of Start Buying",
                    ),
                ),
                (
                    "timestamp_buying",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Timestamp of Buying",
                    ),
                ),
                (
                    "timestamp_selling",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Timestamp of Selling",
                    ),
                ),
                (
                    "receipt_buying",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Receipt - Buying",
                    ),
                ),
                (
                    "receipt_selling",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Receipt - Selling",
                    ),
                ),
                (
                    "others",
                    models.JSONField(default=dict, verbose_name="Others"),
                ),
            ],
            options={
                "verbose_name": "Tradero Bot",
                "verbose_name_plural": "Tradero Bots",
            },
        ),
        migrations.AlterModelOptions(
            name="trainingdata",
            options={
                "ordering": ["-time"],
                "verbose_name": "Training Data",
                "verbose_name_plural": "Training Data",
            },
        ),
        migrations.AddField(
            model_name="symbol",
            name="info",
            field=models.JSONField(
                default=dict, verbose_name="Symmbol's Binance's Info"
            ),
        ),
        migrations.AddField(
            model_name="symbol",
            name="last_updated",
            field=models.DateTimeField(
                auto_now=True,
                null=True,
                verbose_name="Last Updated (timestamp)",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="checkpoint",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Checkpoint"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="api_secret",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="Binance's API key secret",
            ),
        ),
        migrations.CreateModel(
            name="TraderoBotLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_dummy", models.BooleanField(verbose_name="Dummy?")),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Timestamp"
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Inactive"),
                            (1, "Buying"),
                            (2, "Selling"),
                        ],
                        verbose_name="Bot Status",
                    ),
                ),
                (
                    "action",
                    models.SmallIntegerField(
                        choices=[
                            (-1, "Error"),
                            (0, "Hold"),
                            (1, "Buy"),
                            (2, "Sell"),
                            (3, "Jump"),
                            (4, "Turn ON"),
                            (5, "Turn OFF"),
                        ],
                        verbose_name="Bot Action",
                    ),
                ),
                (
                    "fund_base_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Base Asset)",
                    ),
                ),
                (
                    "fund_quote_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Quote Asset)",
                    ),
                ),
                (
                    "price_buying",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Buying Price the Base Asset (Net)",
                    ),
                ),
                (
                    "price_current",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Current Market Price of the Base Asset",
                    ),
                ),
                (
                    "price_selling",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Selling Price of the Base Asset (Net)",
                    ),
                ),
                (
                    "variation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Porcentual Variation between Buying and Selling Price",
                    ),
                ),
                (
                    "message",
                    models.CharField(
                        blank=True,
                        max_length=2048,
                        null=True,
                        verbose_name="Extra message (others)",
                    ),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="logs",
                        to="base.traderobot",
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tradero Bot Log",
                "verbose_name_plural": "Tradero Bots Logs",
            },
        ),
        migrations.AddField(
            model_name="traderobot",
            name="symbol",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bots",
                to="base.symbol",
                verbose_name="Symbol",
            ),
        ),
        migrations.AddField(
            model_name="traderobot",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bots",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.CreateModel(
            name="TradeHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_dummy", models.BooleanField(verbose_name="Dummy?")),
                (
                    "strategy",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Strategy",
                    ),
                ),
                (
                    "strategy_params",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Strategy parameters",
                    ),
                ),
                (
                    "timestamp_start",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Timestamp - Start"
                    ),
                ),
                (
                    "timestamp_buying",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Timestamp - Buying",
                    ),
                ),
                (
                    "timestamp_selling",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Timestamp - Selling",
                    ),
                ),
                (
                    "fund_base_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Base Asset)",
                    ),
                ),
                (
                    "fund_base_asset_exec",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Base Asset) Executed",
                    ),
                ),
                (
                    "fund_base_asset_unexec",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Base Asset) Unexecuted",
                    ),
                ),
                (
                    "fund_quote_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Fund (Quote Asset)",
                    ),
                ),
                (
                    "price_buying",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Net Buying Price the Base Asset",
                    ),
                ),
                (
                    "price_selling",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Net Selling Price of the Base Asset",
                    ),
                ),
                (
                    "receipt_buying",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Receipt - Buying",
                    ),
                ),
                (
                    "receipt_selling",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Receipt - Selling",
                    ),
                ),
                (
                    "is_complete",
                    models.BooleanField(
                        default=False, verbose_name="Is Trade Complete?"
                    ),
                ),
                (
                    "variation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Porcentual Variation between Buying and Selling Price",
                    ),
                ),
                (
                    "variation_quote_asset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=40,
                        null=True,
                        verbose_name="Variation of the Quote Asset",
                    ),
                ),
                (
                    "duration_seeking",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="Elapsed time looking for buy",
                    ),
                ),
                (
                    "duration_trade",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="Elapsed time between Buying and Selling",
                    ),
                ),
                (
                    "duration_total",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="Total Elapsed time since start",
                    ),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trades",
                        to="base.traderobot",
                        verbose_name="Bot",
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trades_history",
                        to="base.symbol",
                        verbose_name="Symbol",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trades",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trade History",
                "verbose_name_plural": "Trades History",
            },
        ),
    ]
